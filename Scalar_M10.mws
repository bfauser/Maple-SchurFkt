{VERSION 6 0 "IBM INTEL NT" "6.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "Hyperlink" -1 17 "" 0 1 0 128 128 1 0 0 1 0 0 0 0 0 0 
1 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 256 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
257 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 258 "" 1 14 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 259 "" 0 1 0 0 0 0 0 2 0 0 0 
0 0 0 0 1 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 1 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Outp
ut" -1 2 1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 
3 1 }1 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Heading 1" 0 3 1 
{CSTYLE "" -1 -1 "" 1 18 0 0 0 0 0 1 0 0 0 0 0 0 0 1 }1 0 0 0 6 6 0 0 
0 0 0 0 -1 0 }{PSTYLE "Heading 2" 3 4 1 {CSTYLE "" -1 -1 "" 1 14 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 }0 0 0 -1 4 4 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 
6 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 1 }0 0 0 -1 -1 
-1 0 0 0 0 0 0 -1 0 }{PSTYLE "Maple Output" 0 11 1 {CSTYLE "" -1 -1 "
" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }
{PSTYLE "Bullet Item" 0 15 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 }0 0 0 -1 3 3 0 0 0 0 0 0 15 2 }}
{SECT 0 {SECT 0 {PARA 4 "" 0 "" {TEXT -1 10 "Function: " }{TEXT 256 
90 "SchurFkt[Scalar] - the Schur-Hall scalar product of symmetric func
tion for Schur functions" }}{PARA 4 "" 0 "" {TEXT -1 17 "Calling Seque
nce:" }}{PARA 4 "" 0 "" {TEXT 257 24 "int := Scalar(s1,s2)  \n\n" }
{TEXT -1 11 "Parameters:" }}{PARA 15 "" 0 "" {TEXT -1 26 "s1,s2    : S
chur functions" }}{PARA 4 "" 0 "" {TEXT -1 7 "Output:" }}{PARA 15 "" 
0 "" {TEXT -1 52 "int :    an integer times the Schur function s[0]=1.
" }}{PARA 4 "" 0 "" {TEXT -1 8 "WARNING:" }}{PARA 0 "" 0 "" {TEXT -1 
108 "In functioning version of this function may return an integer, no
t the Schur function s[0] times an integer." }}}{SECT 0 {PARA 4 "" 0 "
" {TEXT -1 12 "Description:" }}{PARA 15 "" 0 "" {TEXT 259 314 "The Sch
ur-Hall scalarproduct (introduced by Redfield earlier) renders the Sch
ur functions to be an orthonormal basis. This reflects the fact that t
he Schur functions correspond to irreducible GL-characters. Due to Sch
ur's lemma there is one or non isomorphism between such characters if \+
they are isomorphic or not." }}{PARA 15 "" 0 "" {TEXT -1 242 "The Schu
r-Hall scalar product is used to identify the dual Hopf algebra of the
 Hopf algebra of symmetric functions /\\ to be isomorphic to the later
. Hence /\\ is a selfdual Hopf algebra. This fact leads to a wealth of
 combinatorial identities." }}{PARA 15 "" 0 "" {TEXT -1 350 "The Schur
-Hall scalar product is the inverse (in a certain categorical sense, a
s a tangle it is a cup) of the Cauchy kernel (as a tangle a cap):\n\n(
1)   C(x,y) = \\prod_(i ,j)  1 / (1-x_iy_j) = \\sum_\\lambda s_\\lambd
a(x) s_\\lambda(y)\n\nwhere the product is over all letters x_i and y_
j of the alphabets X and Y and the sum is over all partitions \\lambda
." }}{PARA 15 "" 0 "" {TEXT -1 90 "Note that the Schur-Hall scalar pro
duct identifies as modules the dual space /\\^* with /\\." }}{PARA 15 
"" 0 "" {TEXT -1 81 "A proper name for this function would be ScalarSS
 due to our naming conventions. " }}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 
9 "Examples:" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "restart:with
(SchurFkt):" }}{PARA 6 "" 1 "" {TEXT -1 52 "SchurFkt Version 1.0.1 (17
 xii 2007) at your service" }}{PARA 6 "" 1 "" {TEXT -1 58 "(c) 2003-20
07 BF&RA, no warranty, no fitness for anything!" }}{PARA 6 "" 1 "" 
{TEXT -1 83 "Increase verbosity by infolevel[`function`]=val -- use on
line help > ?Bigebra[help]" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
37 "Scalar(s[2],s[1]);\nScalar(s[2],s[2]);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#\"\"!" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#&%\"sG6#\"\"!
" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 21 "Scalar is multilinear" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 32 "Scalar(s[1,1]+s[2],s[1,1]+s[
2]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#,$*&\"\"#\"\"\"&%\"sG6#\"\"!F&
F&" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}}{SECT 0 {PARA 4 
"" 0 "" {TEXT -1 15 "Algorithm used:" }}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 69 "Scalar is implemented straight forwardly by comparing the parti
tions." }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 0 "" }}}}{SECT 0 {PARA 0 "
" 0 "" {TEXT 258 10 "See Also: " }{HYPERLNK 17 "SchurFkt[Overview]" 2 
"SchurFkt,Overview" "" }{TEXT -1 60 ", (see also under ScalarAB where \+
 A,B are other basis types)" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 
0 "" 0 "" {TEXT -1 140 "(c) Copyright June 2003 - December 2007, by Be
rtfried Fauser & Rafal Ablamowicz, all rights reserved.\nLast modified
: December 17, 2007/BF/RA" }}}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 
"" 0 "" {TEXT -1 0 "" }}}{MARK "3 0 0" 1 }{VIEWOPTS 1 1 0 1 1 1803 1 
1 1 1 }{PAGENUMBERS 0 1 2 33 1 1 }
