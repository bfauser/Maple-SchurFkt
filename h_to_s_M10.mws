{VERSION 6 0 "IBM INTEL NT" "6.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "Hyperlink" -1 17 "" 0 1 0 128 128 1 0 0 1 0 0 0 0 0 0 
1 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 256 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
257 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 258 "" 1 14 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 259 "" 0 1 0 0 0 0 0 2 0 0 0 
0 0 0 0 1 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 
0 1 2 2 2 2 2 2 1 1 1 1 }1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Heading
 2" -1 4 1 {CSTYLE "" -1 -1 "Times" 1 14 0 0 0 1 2 1 2 2 2 2 1 1 1 1 }
1 1 0 0 4 4 1 0 1 0 2 2 0 1 }{PSTYLE "Text Output" -1 6 1 {CSTYLE "" 
-1 -1 "Courier" 1 10 0 0 255 1 2 2 2 2 2 1 2 1 3 1 }1 1 0 0 0 0 1 0 1 
0 2 2 0 1 }{PSTYLE "Maple Output" -1 11 1 {CSTYLE "" -1 -1 "Times" 1 
12 0 0 0 1 2 2 2 2 2 2 1 1 1 1 }3 3 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "
Bullet Item" -1 15 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 
2 1 1 1 1 }1 1 0 0 3 3 1 0 1 0 2 2 15 2 }}
{SECT 0 {SECT 0 {PARA 4 "" 0 "" {TEXT -1 10 "Function: " }{TEXT 256 
80 "SchurFkt[h_to_s] - convert a homogenous symmetric function into a \+
Schur function" }}{PARA 4 "" 0 "" {TEXT -1 17 "Calling Sequence:" }}
{PARA 4 "" 0 "" {TEXT 257 24 "sfkt := h_to_s(hfkt)  \n\n" }{TEXT -1 
11 "Parameters:" }}{PARA 15 "" 0 "" {TEXT -1 39 "hfkt    :  complete s
ymmetric function " }}{PARA 4 "" 0 "" {TEXT -1 7 "Output:" }}{PARA 15 
"" 0 "" {TEXT -1 23 "sfkt  :  Schur function" }}{PARA 4 "" 0 "" {TEXT 
-1 8 "WARNING:" }}{PARA 0 "" 0 "" {TEXT -1 8 "--none--" }}}{SECT 0 
{PARA 4 "" 0 "" {TEXT -1 12 "Description:" }}{PARA 15 "" 0 "" {TEXT 
259 111 "This function takes a an expression in complete symmetric fun
ctions and returns it in the Schur function basis." }}{PARA 15 "" 0 "
" {TEXT -1 369 "Basis changes are considered to be a major part of the
 theory of symmetric functions. This particular basis change can be do
ne in various ways. SchurFkt uses in general Hopf algebra methods to p
erform such basis changes. These algorithms are possibly not the faste
st, but they neatly generalize to Schur functors and are therefore imp
ortant as a proof-of-concept issue." }}{PARA 15 "" 0 "" {TEXT -1 168 "
h_to_s could be done by using the Kostka numbers, but is implemented b
y using the multiplicativity of the h-basis and the isomorphism h[n]=s
[n] for one part partitions." }}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 9 "E
xamples:" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "restart:with(Sch
urFkt):" }}{PARA 6 "" 1 "" {TEXT -1 52 "SchurFkt Version 1.0.1 (17 xii
 2007) at your service" }}{PARA 6 "" 1 "" {TEXT -1 58 "(c) 2003-2007 B
F&RA, no warranty, no fitness for anything!" }}{PARA 6 "" 1 "" {TEXT 
-1 83 "Increase verbosity by infolevel[`function`]=val -- use online h
elp > ?Bigebra[help]" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 29 "h_t
o_s(h[2]);\nh_to_s(h[1,1]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#&%\"sG6
#\"\"#" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#,&&%\"sG6#\"\"#\"\"\"&F%6$F(
F(F(" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "h_to_s(2*h[3,1]+3*h
[1,1]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#,**&\"\"#\"\"\"&%\"sG6#\"\"
%F&F&*&F%F&&F(6$\"\"$F&F&F&*&F.F&&F(6#F%F&F&*&F.F&&F(6$F&F&F&F&" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 63 "prt:=PartNM(4,4):\nprt:=map(
(x)->h[op(x)],prt);\nmap(h_to_s,prt);" }}{PARA 11 "" 1 "" {XPPMATH 20 
"6#>%$prtG7'&%\"hG6#\"\"%&F'6$\"\"$\"\"\"&F'6$\"\"#F0&F'6%F0F-F-&F'6&F
-F-F-F-" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#7'&%\"sG6#\"\"%,&F$\"\"\"&F
%6$\"\"$F)F),(F$F)F*F)&F%6$\"\"#F0F),*F$F)*&F0F)F*F)F)F.F)&F%6%F0F)F)F
),,F$F)*&F,F)F*F)F)*&F0F)F.F)F)*&F,F)F3F)F)&F%6&F)F)F)F)F)" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT -1 15 "Critical cases:" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 24 "h_to_s(0);\nh_to_s(h[0]);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#\"\"!" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#&%\"sG6#\"\"!
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}}{SECT 0 {PARA 4 "
" 0 "" {TEXT -1 15 "Algorithm used:" }}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 390 "Due to the multiplicativity of the h-basis we use the followin
g fact:\n\n(1)    h[\\mu] = h[\\mu1] . h[\\mu2] . h[\\mu3] . ... . h[
\\mul]\n\nfurthermore we use the isomorphism h[n]=s[n] for one part co
mplete symmetric functions and evaluate the outer product in the Schur
 function basis\n\n(2)   h[\\mu] = eval(s[\\mu1] . s[\\mu2] . s[\\mu3]
 . ... . s[\\mul])\n                       = s[\\mu] + other terms\n" 
}}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 0 "" }}}}{SECT 0 {PARA 0 "" 0 "" 
{TEXT 258 10 "See Also: " }{HYPERLNK 17 "SchurFkt[Overview]" 2 "SchurF
kt,Overview" "" }{TEXT -1 78 ", there are many a_to_b functions for ot
her bases, check out in the overview. " }}{PARA 0 "" 0 "" {TEXT -1 
141 "\n(c) Copyright June 2003 - December 2007, by Bertfried Fauser & \+
Rafal Ablamowicz, all rights reserved.\nLast modified: December 17, 20
07/BF/RA" }}}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 
0 "" }}}{MARK "4 0 1" 10 }{VIEWOPTS 1 1 0 1 1 1803 1 1 1 1 }
{PAGENUMBERS 0 1 2 33 1 1 }
