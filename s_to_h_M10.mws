{VERSION 6 0 "IBM INTEL NT" "6.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "Hyperlink" -1 17 "" 0 1 0 128 128 1 0 0 1 0 0 0 0 0 0 
1 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 256 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
257 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 258 "" 1 14 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 259 "" 0 1 0 0 0 0 0 2 0 0 0 
0 0 0 0 1 }{CSTYLE "" -1 260 "" 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 261 "" 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{PSTYLE "Normal
" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }0 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 2 1 {CSTYLE "" -1 
-1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 3 1 }1 0 0 -1 -1 -1 0 0 0 
0 0 0 -1 0 }{PSTYLE "Heading 1" 0 3 1 {CSTYLE "" -1 -1 "" 1 18 0 0 0 
0 0 1 0 0 0 0 0 0 0 1 }1 0 0 0 6 6 0 0 0 0 0 0 -1 0 }{PSTYLE "Heading \+
2" 3 4 1 {CSTYLE "" -1 -1 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }0 0 0 
-1 4 4 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" -1 -1 "" 0 1 0 0 
0 0 0 0 0 0 0 0 2 0 0 1 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Map
le Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
}3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Bullet Item" 0 15 1 
{CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }0 0 0 -1 3 3 0 0 
0 0 0 0 15 2 }}
{SECT 0 {SECT 0 {PARA 4 "" 0 "" {TEXT -1 10 "Function: " }{TEXT 256 
95 "SchurFkt[s_to_h ] - basis change from Schur function basis to comp
lete symmetric function basis" }}{PARA 4 "" 0 "" {TEXT -1 17 "Calling \+
Sequence:" }}{PARA 4 "" 0 "" {TEXT 257 24 "pfkt := s_to_h(sfkt)  \n\n
" }{TEXT -1 11 "Parameters:" }}{PARA 15 "" 0 "" {TEXT -1 26 "sfkt    :
  Schur function " }}{PARA 4 "" 0 "" {TEXT -1 7 "Output:" }}{PARA 15 "
" 0 "" {TEXT -1 36 "hfkt  :  complete symmetric function" }}{PARA 4 "
" 0 "" {TEXT -1 8 "WARNING:" }}{PARA 0 "" 0 "" {TEXT -1 85 "--slow, us
es matrix inversion: -> should use Jacobi-Trudi or a Hopf-Laplace algo
rithm" }}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 12 "Description:" }}{PARA 
15 "" 0 "" {TEXT 259 312 "s_to_h transforms a Schur function into a co
mplete symmetric function. This transformation is governed by the Kost
ka matrix. We conclude from \n\n(1)        s_\\mu = \\sum_\\nu K_\\mu
\\nu m_\\nu\n(2)       <h_\\rho | s_\\mu> = \\sum_\\mu  K_\\mu\\nu <h_
\\rho|m_\\nu> = K_\\mu\\rho\n\nthat this transformation is obtained vi
a K^(-1). " }}{PARA 15 "" 0 "" {TEXT 260 171 "A better way to compute \+
this transition is to use the Jacobi-Trudi formula\n\n(3)    s_\\mu = \+
det( h_\{\\mu_i-i+j\})\n\ngiving a direct combinatorial device to prod
uce the result." }}{PARA 15 "" 0 "" {TEXT 261 578 "A more complicated \+
but potentially more effective way to compute this transition would e \+
to use the Laplace property of the outer coproduct and product to eval
uate the transition using a multiplicative basis inserted into the exp
ression\n\n(4)  s_\\mu  =  \\sum_\\nu    <s_\\mu| m_nu> h_nu\n        \+
             =  \\sum_\\nu\\rho   <s_\\mu|p_\\rho>1/z_\\rho <p_\\rho|m
_\\nu> h_\\nu\n                     = \\sum_\\nu\\mu  \\sum_(\\mu)(\\n
u)  \\prod_(i,j)^length(\\rho)  1/z_\\rho <s_\\mu(i)|p_\\rho_i> <p_rho
_j| m_\\nu(j)> h_\\nu\n\nwhich implements the Jacobi-Trudi expansion v
ia a Hopf algebraic mechanism.\n" }}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 
9 "Examples:" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "restart:with
(SchurFkt):" }}{PARA 6 "" 1 "" {TEXT -1 52 "SchurFkt Version 1.0.1 (17
 xii 2007) at your service" }}{PARA 6 "" 1 "" {TEXT -1 58 "(c) 2003-20
07 BF&RA, no warranty, no fitness for anything!" }}{PARA 6 "" 1 "" 
{TEXT -1 83 "Increase verbosity by infolevel[`function`]=val -- use on
line help > ?Bigebra[help]" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
37 "s_to_h(s[3,3,1]);\ns_to_h(s[2,2,1,1]);" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#,*&%\"hG6$\"\"&\"\"#\"\"\"&F%6$\"\"%\"\"$!\"\"&F%6%F,F(
F)F.&F%6%F-F-F)F)" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#,.&%\"hG6$\"\"&\"
\"\"!\"\"&F%6$\"\"%\"\"#F(&F%6%F,F(F(F(&F%6&\"\"$F(F(F(F)&F%6%F-F-F-F)
&F%6&F-F-F(F(F(" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 57 "2*s_to_h
(s[2])+3*s_to_h(s[1,1]);\ns_to_h(2*s[2]+3*s[1,1]);" }}{PARA 11 "" 1 "
" {XPPMATH 20 "6#,&&%\"hG6#\"\"#!\"\"*&\"\"$\"\"\"&F%6$F+F+F+F+" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6#,&&%\"hG6#\"\"#!\"\"*&\"\"$\"\"\"&F%6$
F+F+F+F+" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 33 "Inverse transformatio
n is h_to_s:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 28 "h_to_s(3*h[
2,1]+5*h[4,2,1]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#,2*&\"\"$\"\"\"&%
\"sG6#F%F&F&*&F%F&&F(6$\"\"#F&F&F&*&\"\"&F&&F(6#\"\"(F&F&*&\"#5F&&F(6$
\"\"'F&F&F&*&F4F&&F(6$F/F-F&F&*&F/F&&F(6%F/F&F&F&F&*&F/F&&F(6$\"\"%F%F
&F&*&F/F&&F(6%FAF-F&F&F&" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 10 
"s_to_h(%);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#,&*&\"\"$\"\"\"&%\"hG6$
\"\"#F&F&F&*&\"\"&F&&F(6%\"\"%F*F&F&F&" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT -1 15 "Critical cases:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 24 "s_to_h(s[0]);\ns_to_h(0);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#&%
\"hG6#\"\"!" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"!" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 15 
"Algorithm used:" }}{EXCHG {PARA 0 "" 0 "" {TEXT -1 48 "Quick and dirt
y hack, no documentation intended." }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 0 "" }}}}{SECT 0 {PARA 0 "" 0 "" {TEXT 258 10 "See Also: " }
{HYPERLNK 17 "SchurFkt[h_to_s]" 2 "SchurFkt,h_to_s" "" }{TEXT -1 2 ", \+
" }{HYPERLNK 17 "SchurFkt[Overview]" 2 "SchurFkt,Overview" "" }{TEXT 
-1 3 "  \n" }}{PARA 0 "" 0 "" {TEXT -1 140 "(c) Copyright June 2003 - \+
December 2007, by Bertfried Fauser & Rafal Ablamowicz, all rights rese
rved.\nLast modified: December 17, 2007/BF/RA" }}}{PARA 0 "" 0 "" 
{TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}}{MARK "3 0 0" 1 }
{VIEWOPTS 1 1 0 1 1 1803 1 1 1 1 }{PAGENUMBERS 0 1 2 33 1 1 }
