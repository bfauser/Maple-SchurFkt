{VERSION 6 0 "IBM INTEL NT" "6.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 
0 0 1 }{CSTYLE "Hyperlink" -1 17 "" 0 1 0 128 128 1 0 0 1 0 0 0 0 0 0 
1 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 256 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
257 "" 1 12 0 0 0 0 0 2 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 258 "" 1 14 0 
0 0 0 0 1 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 259 "" 0 1 0 0 0 0 0 2 0 0 0 
0 0 0 0 1 }{CSTYLE "" -1 260 "" 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 }
{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 
0 0 1 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 2 1 
{CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 3 1 }1 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Heading 1" 0 3 1 {CSTYLE "" -1 -1 
"" 1 18 0 0 0 0 0 1 0 0 0 0 0 0 0 1 }1 0 0 0 6 6 0 0 0 0 0 0 -1 0 }
{PSTYLE "Heading 2" 3 4 1 {CSTYLE "" -1 -1 "" 1 14 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 }0 0 0 -1 4 4 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" 
-1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 1 }0 0 0 -1 -1 -1 0 0 0 0 0 0 
-1 0 }{PSTYLE "Maple Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 }3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Bullet It
em" 0 15 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }0 0 0 
-1 3 3 0 0 0 0 0 0 15 2 }}
{SECT 0 {SECT 0 {PARA 4 "" 0 "" {TEXT -1 10 "Function: " }{TEXT 256 
95 "SchurFkt[MurNak] - computes the Murnaghan-Nakayama, hence the char
acters of the symmetric group" }}{PARA 4 "" 0 "" {TEXT -1 17 "Calling \+
Sequence:" }}{PARA 4 "" 0 "" {TEXT 257 30 "int := MurNak(part1,part2) \+
 \n\n" }{TEXT -1 11 "Parameters:" }}{PARA 15 "" 0 "" {TEXT -1 101 "par
t1,part2   : two partitions corresponding to a power sum symmetric fun
ction and a Schur function. " }}{PARA 4 "" 0 "" {TEXT -1 7 "Output:" }
}{PARA 15 "" 0 "" {TEXT -1 18 "int  :  an integer" }}{PARA 4 "" 0 "" 
{TEXT -1 8 "WARNING:" }}{PARA 0 "" 0 "" {TEXT 260 16 "no type checking
" }{TEXT -1 51 "!  (for internal use mainly! in s_to_p, p_to_s etc)" }
}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 12 "Description:" }}{PARA 15 "" 0 "
" {TEXT 259 197 "MurNak computes the rimhook decomposition of a Young \+
diagram by rimhooks given by the parts of a power symmetric function. \+
This is an efficient way to compute the characters of the symmetric gr
oup." }}{PARA 15 "" 0 "" {TEXT -1 339 "For efficiency reasons, MurNak \+
uses internally a rim representation of partitions. This is an encodin
g of the shape of a partition via north (=0) and east (=1) steps. A sh
ape translates into an infinite set of steps describing the path from \+
(0,-infinity) to (infinity,0). (The infinite pre and suffixes are of c
ourse not used internally). " }}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 9 "E
xamples:" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "restart:with(Sch
urFkt):" }}{PARA 6 "" 1 "" {TEXT -1 52 "SchurFkt Version 1.0.1 (17 xii
 2007) at your service" }}{PARA 6 "" 1 "" {TEXT -1 58 "(c) 2003-2007 B
F&RA, no warranty, no fitness for anything!" }}{PARA 6 "" 1 "" {TEXT 
-1 83 "Increase verbosity by infolevel[`function`]=val -- use online h
elp > ?Bigebra[help]" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 182 "Some sim
ple cases, where the power sum argument (first argument) has one part \+
(one hook) and the Schur function part has 1,2,3 rows, which yields th
e signs (internally1)^1 and (-1)^2" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 56 "MurNak([3],[3]);\nMurNak([3],[2,1]);\nMurNak([3],[1,1
,1]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"\"" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#!\"\"" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"\"" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 181 "MurNak([4],[4]);       ##  \+
1 row  \nMurNak([4],[3,1]);     ##  2 rows\nMurNak([4],[2,2]);     ## \+
 not a hook, => 0\nMurNak([4],[2,1,1]);   ##  3 rows \nMurNak([4],[1,1
,1,1]); ##  4 rows" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"\"" }}{PARA 
11 "" 1 "" {XPPMATH 20 "6#!\"\"" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"
\"!" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#\"\"\"" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#!\"\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}
}}{SECT 0 {PARA 4 "" 0 "" {TEXT -1 15 "Algorithm used:" }}{EXCHG 
{PARA 0 "" 0 "" {TEXT -1 39 "MurNak uses several internal functions:" 
}}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 258 "makeRi
mRep:  this function transforms the shape of a partition (Young diagra
m) into its rim representation (north-east-sequesnce of steps). Note t
hat rime represented partitions are not available on the user level bu
t only internally to the module SchurFkt.\n" }}{PARA 0 "" 0 "" {TEXT 
-1 515 "removeRimHook:  This is the function which actually does the j
ob of removing a rimhook from a partition. It looks for a pair of east
-north step in the distance of the length of the hook. If such a pair \+
is found, the pair is exchanged (the hook removed) and a sign is compu
ted according to the number of north steps in between the removed pair
. This gives the height of the hook and hence the desired sign of the \+
reduction. The function returns pair: the rimhook represented partitio
n with removed hook and the sign." }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}
{PARA 0 "" 0 "" {TEXT -1 359 "MurNakRim: This is the Murnaghan-Nakayam
a rule on the rimhook representation level. It calls removeRimHook sev
eral times according to the partition corresponding to the power sum r
emoving for each part of the power sum partition exactly one hook. The
 function keeps track of all possible removals. The result is given in
 standard list notation for partitions." }}{PARA 0 "" 0 "" {TEXT -1 0 
"" }}{PARA 0 "" 0 "" {TEXT -1 112 "Finally MurNak is the wrapper funct
ion taking user supplied arguments and preparing them for usage in Mur
NakRim." }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 0 "" }}}}{SECT 0 {PARA 0 "
" 0 "" {TEXT 258 10 "See Also: " }{HYPERLNK 17 "SchurFkt[Overview]" 2 
"SchurFkt,Overview" "" }}{PARA 0 "" 0 "" {TEXT -1 146 "\n(c) Copyright
 June 2003 - December 17, 2007, by Bertfried Fauser & Rafal Ablamowicz
, all rights reserved.\nLast modified: December 17, 2007/BF/RA." }}}
{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}}
{MARK "4 0 1" 7 }{VIEWOPTS 1 1 0 1 1 1803 1 1 1 1 }{PAGENUMBERS 0 1 2 
33 1 1 }
